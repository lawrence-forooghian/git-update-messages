#!/usr/bin/env ruby
require "pathname"
require "logger"

# This script expects to receive the following arguments:
#
# 1. (Optional) full path to the repository â€” this means that the script does not need to be called from within the repository
# 2. the subsequent arguments that Git passes to the post-rewrite hook (there should be one)

%w[commit_message_updater command_line_logger].each do |file|
  require Pathname.new(__FILE__).realpath + "../../../lib/#{file}"
end

logger = CommandLineLogger.create

begin
  if ARGV.empty? || ARGV.length > 2
    logger.error("\e[31mExpected optional first argument to be the full path of the repo, and second argument to be name of post-rewrite operation.\e[0m")
    exit 1
  end

  repo_path = (ARGV.length == 2) ? ARGV.shift : Dir.pwd

  if ARGV[0] != "rebase"
    logger.debug("Operation is not a rebase. Will not update commit messages.")
    exit 0
  end

  rewritten_commits = $stdin.read

  mapped_shas = rewritten_commits.lines.map { |line|
    line.chomp.split(" ")[0..1]
  }
  updater = CommitMessageUpdater.new(repo_path, mapped_shas)

  if updater.messages_need_updating?
    updater.update
    logger.info("\e[32mUpdated commit messages.\e[0m")
  else
    logger.debug("No messages need to be updated.")
  end
rescue => e
  logger.fatal(e.message)
  exit 1
end
